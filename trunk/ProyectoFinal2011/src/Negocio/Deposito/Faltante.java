package Negocio.Deposito;
// Generated 12/08/2011 13:27:23 by Hibernate Tools 3.2.1.GA

import Negocio.Produccion.DetallePlanProduccion;
import Negocio.Compras.DetalleOrdenCompra;
import Negocio.Compras.Material;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TFaltantes generated by hbm2java
 */
@Entity
@Table(name = "T_FALTANTES", schema = "dbo", catalog = "Ramaty")
public class Faltante implements java.io.Serializable {

    @Id
    @GeneratedValue
    @Column(name = "ID_FALTANTE", unique = true, nullable = false, precision = 4, scale = 0)
    private short idFaltante;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_DETALLE_PLAN")
    private DetallePlanProduccion TDetallesPlan;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_DETALLE_ORDEN_COMPRA")
    private DetalleOrdenCompra TDetallesOrdenCompra;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_MATERIAL", nullable = true)
    private Material TMateriales;
    @Column(name = "CANTIDAD", nullable = true, precision = 5)
    private BigDecimal cantidad;
    @Temporal(value = TemporalType.TIMESTAMP)
    @Column(name = "FEC_GENERACION", nullable = true, length = 23)
    private Date fecGeneracion;
    @Temporal(value = TemporalType.TIMESTAMP)
    @Column(name = "FEC_NECESIDAD", nullable = true, length = 23)
    private Date fecNecesidad;    

    public Faltante() {
    }

    public Faltante(short idFaltante, Material TMateriales, Integer cantidad, Date fecGeneracion, Date fecNecesidad) {
        this.idFaltante = idFaltante;
        this.TMateriales = TMateriales;
        this.cantidad =  BigDecimal.valueOf(cantidad);
        this.fecGeneracion = fecGeneracion;
        this.fecNecesidad = fecNecesidad;
    }

    public Faltante(short idFaltante, DetallePlanProduccion TDetallesPlan, DetalleOrdenCompra TDetallesOrdenCompra, Material TMateriales, Integer cantidad, Date fecGeneracion, Date fecNecesidad) {
        this.idFaltante = idFaltante;
        this.TDetallesPlan = TDetallesPlan;
        this.TDetallesOrdenCompra = TDetallesOrdenCompra;
        this.TMateriales = TMateriales;
        this.cantidad =  BigDecimal.valueOf(cantidad);
        this.fecGeneracion = fecGeneracion;
        this.fecNecesidad = fecNecesidad;
    }

    public short getId() {
        return this.idFaltante;
    }

    public void setId(short idFaltante) {
        this.idFaltante = idFaltante;
    }

    public DetallePlanProduccion getDetallePlan() {
        return this.TDetallesPlan;
    }

    public void setDetallePlan(DetallePlanProduccion TDetallesPlan) {
        this.TDetallesPlan = TDetallesPlan;
    }

    public DetalleOrdenCompra getDetalleOrdenCompra() {
        return this.TDetallesOrdenCompra;
    }

    public void setDetalleOrdenCompra(DetalleOrdenCompra TDetallesOrdenCompra) {
        this.TDetallesOrdenCompra = TDetallesOrdenCompra;
    }

    public Material getMaterial() {
        return this.TMateriales;
    }

    public void setMaterial(Material TMateriales) {
        this.TMateriales = TMateriales;
    }

    public Integer getCantidad() {
        return this.cantidad.intValueExact();
    }

    public void setCantidad(Integer cantidad) {
        this.cantidad =  BigDecimal.valueOf(cantidad);
    }

    public Date getFecGeneracion() {
        return this.fecGeneracion;
    }

    public void setFecGeneracion(Date fecGeneracion) {
        this.fecGeneracion = fecGeneracion;
    }

    public Date getFecNecesidad() {
        return this.fecNecesidad;
    }

    public void setFecNecesidad(Date fecNecesidad) {
        this.fecNecesidad = fecNecesidad;
    }

    @Override
    public boolean equals(Object obj) {
        try{
            if(((Faltante)obj).getId()==this.getId())
                return true;
        }catch(Exception ex){}
        return false;
    }
}
