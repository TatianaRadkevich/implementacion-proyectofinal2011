package Negocio.Administracion;
// Generated 12/08/2011 13:27:23 by Hibernate Tools 3.2.1.GA

import BaseDeDatos.Administracion.CargoBD;
import Negocio.Produccion.EtapaProduccionEspecifica;
import Negocio.Exceptiones.TipoDatoException;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TCargos generated by hbm2java
 */
@Entity
@Table(name = "T_CARGOS", schema = "dbo", catalog = "Ramaty")
public class Cargo implements java.io.Serializable {

    @Id
    @GeneratedValue
    @Column(name = "ID_CARGO", unique = true, nullable = false, precision = 2, scale = 0)
    private int idCargo;
    @Column(name = "NOMBRE", nullable = false, length = 50)
    private String nombre;
    @Column(name = "DESCRIPCION", length = 200)
    private String descripcion;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FEC_BAJA", length = 23)
    private Date fecBaja;
    @Column(name = "MOTIVO_BAJA", length = 200)
    private String motivoBaja;

    public Cargo() {
    }

    public Cargo(int idCargo, String nombre) {
        this.idCargo = idCargo;
        this.nombre = nombre;
    }

    public Cargo(int idCargo, Empleado TEmpleados, String nombre, String descripcion, Date fecBaja, String motivoBaja) {
        this.idCargo = idCargo;
        this.nombre = nombre;
        this.descripcion = descripcion;
        this.fecBaja = fecBaja;
        this.motivoBaja = motivoBaja;
    }

    public int getIdCargo() {
        return this.idCargo;
    }

    public void setIdCargo(int idCargo) {
        this.idCargo = idCargo;
    }

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) throws TipoDatoException {
        if (nombre.matches("[a-zA-Z ]*") && !nombre.trim().isEmpty()) {
            if(CargoBD.getCargoPorNombre(nombre)!=null)
                throw new TipoDatoException("Ya existe un cargo con ese nombre");
            this.nombre = nombre;
        } else {
            this.nombre = null;
            throw new TipoDatoException("Formato incorrecto. Debe ser alfab√©tico");
        }
    }

    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public Date getFecBaja() {
        return this.fecBaja;
    }

    public void setFecBaja(Date fecBaja) {
        this.fecBaja = fecBaja;
    }

    public String getMotivoBaja() {
        return this.motivoBaja;
    }

    public void setMotivoBaja(String motivoBaja) {
        this.motivoBaja = motivoBaja;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        Cargo temp = (Cargo) obj;
        if (this.getNombre().compareTo(temp.getNombre()) == 0) {
            return true;
        }
        return false;
    }

    public String toString() {
        return this.getNombre();
    }

    public boolean validarOk() throws TipoDatoException {
        if (nombre == null) {
            throw new TipoDatoException("Algunos campos no han sido ingresado correctamente");
        }
        return true;
    }
}
