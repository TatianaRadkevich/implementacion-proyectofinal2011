package Negocio.Administracion;
// Generated 21/10/2011 13:42:06 by Hibernate Tools 3.2.1.GA

import Presentacion.Utilidades;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TAsignacionesDias generated by hbm2java
 */
@Entity
@Table(name = "T_ASIGNACIONES_DIAS", schema = "dbo", catalog = "Ramaty")
public class AsignacionesDias implements java.io.Serializable, Comparable<AsignacionesDias> {

    @Id
    @GeneratedValue
    @Column(name = "ID_ASIGNACION_DIA", unique = true, nullable = false, precision = 2, scale = 0)
    private short idAsignacionDia;
    /*---------------------------------------------------------------------------------------------*/
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_HORARIO", nullable = false)
    private Horarios THorarios;
    /*---------------------------------------------------------------------------------------------*/
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_DIA", nullable = false)
    private Dia TDias;
    /*---------------------------------------------------------------------------------------------*/
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "HORA_DESDE", nullable = false, length = 23)
    private Date horaDesde;
    /*---------------------------------------------------------------------------------------------*/
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "HORA_HASTA", length = 23)
    private Date horaHasta;
    /*---------------------------------------------------------------------------------------------*/

    public AsignacionesDias() {
    }

    public AsignacionesDias(short idAsignacionDia, Horarios THorarios, Dia TDias, Date horaDesde) {
        this.idAsignacionDia = idAsignacionDia;
        this.THorarios = THorarios;
        this.TDias = TDias;
        this.horaDesde = horaDesde;
    }

    public AsignacionesDias(short idAsignacionDia, Horarios THorarios, Dia TDias, Date horaDesde, Date horaHasta) {
        this.idAsignacionDia = idAsignacionDia;
        this.THorarios = THorarios;
        this.TDias = TDias;
        this.horaDesde = horaDesde;
        this.horaHasta = horaHasta;
    }

    public short getIdAsignacionDia() {
        return this.idAsignacionDia;
    }

    public void setIdAsignacionDia(short idAsignacionDia) {
        this.idAsignacionDia = idAsignacionDia;
    }

    public Horarios getTHorarios() {
        return this.THorarios;
    }

    public void setTHorarios(Horarios THorarios) {
        this.THorarios = THorarios;
    }

    public Dia getDia() {
        return this.TDias;
    }

    public void setDia(Dia TDias) {
        this.TDias = TDias;
    }

    public Date getHoraDesde() {
        return this.horaDesde;
    }

    public void setHoraDesde(Date horaDesde) {
        this.horaDesde = horaDesde;
    }

    public Date getHoraHasta() {
        return this.horaHasta;
    }

    public void setHoraHasta(Date horaHasta) {
        this.horaHasta = horaHasta;
    }

    @Override
    public String toString() {
        String salida = "";
        salida += "Dia: " + TDias.getNombre() + " ";
        salida += String.format("Desde: %s:%s Hs.", horaDesde.getHours(), horaDesde.getMinutes()) + " ";
        salida += String.format("Hasta: %s:%s Hs.", horaHasta.getHours(), horaHasta.getMinutes()) + " ";
        return salida;

    }

    public boolean isPresente(Date tiempo) {
        Hora hd = new Hora(horaDesde);
        Hora hh = new Hora(horaHasta);
        Hora t = new Hora(tiempo);

        if (this.getDia().equals(Dia.parseDia(tiempo))) {
            if (hd.compareTo(t) <= 0 && hh.compareTo(t) >= 0) {
                return true;
            }
        }
        return false;
    }

    public int compareTo(AsignacionesDias o) {
        int aux = this.getDia().compareTo(o.getDia()) * 1000000;
        Hora miHora = new Hora(this.getHoraDesde());
        Hora otraHora = new Hora(o.getHoraDesde());
        aux += miHora.compareTo(otraHora);
        return aux;
    }
}
