package Negocio.Produccion;
// Generated 18/03/2012 17:10:18 by Hibernate Tools 3.2.1.GA


import Negocio.Exceptiones.TipoDatoException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Cascade;

/**
 * THerramientasParticular generated by hbm2java
 */
@Entity
@Table(name="T_HERRAMIENTAS_PARTICULAR"
    ,schema="dbo"
    ,catalog="Ramaty"
)
public class HerramientaParticular  implements java.io.Serializable {


     @Id
    @GeneratedValue
    @Column(name="ID_HERRAMIENTA_PARTICULAR", unique=true, nullable=false, precision=3, scale=0)
     private short idHerramientaParticular;
     //_________________________________________________________________________________________________//
     @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_THERRAMIENTA", nullable=false)
     private TipoHerramienta TTherramienta;
     //_________________________________________________________________________________________________//
      @Column(name="CARACTERISTICAS", nullable=false, length=200)
     private String caracteristicas;
     //_________________________________________________________________________________________________//
     @Column(name="MODELO", nullable=false, length=50)
      private String modelo;
     //_________________________________________________________________________________________________//
     @Column(name="NOMBRE", nullable=false, length=50)
     private String nombre;
     //_________________________________________________________________________________________________//
     @Column(name="OBSERVACIONES", length=200)
     private String observaciones;
     //_________________________________________________________________________________________________//
     @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FEC_BAJA", length=23)
     private Date fecBaja;
     //_________________________________________________________________________________________________//
     @Column(name="MOTIVO_BAJA", length=50)
     private String motivoBaja;
     //_________________________________________________________________________________________________//
     @Column(name="CANTIDAD")
     private Integer cantidad;
     //_____________________________________________________________________________________________________
     @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="THerramientasParticular")
     @Cascade(org.hibernate.annotations.CascadeType.DELETE_ORPHAN)
     private Set<ProblemasMhp> TProblemasMhps = new HashSet<ProblemasMhp>(0);

//     private Set TMaqHerrPartXDetPlans = new HashSet(0);

    public HerramientaParticular() {
    }

	
    public HerramientaParticular(short idHerramientaParticular, TipoHerramienta TTherramienta, String caracteristicas, String modelo, String nombre) {
        this.idHerramientaParticular = idHerramientaParticular;
        this.TTherramienta = TTherramienta;
        this.caracteristicas = caracteristicas;
        this.modelo = modelo;
        this.nombre = nombre;
    }
    public HerramientaParticular(short idHerramientaParticular, TipoHerramienta TTherramienta, String caracteristicas, String modelo, String nombre, String observaciones, Date fecBaja, String motivoBaja/*, Set TMaqHerrPartXDetPlans*/) {
       this.idHerramientaParticular = idHerramientaParticular;
       this.TTherramienta = TTherramienta;
       this.caracteristicas = caracteristicas;
       this.modelo = modelo;
       this.nombre = nombre;
       this.observaciones = observaciones;
       this.fecBaja = fecBaja;
       this.motivoBaja = motivoBaja;
//       this.TMaqHerrPartXDetPlans = TMaqHerrPartXDetPlans;
    }
   
     
    public short getIdHerramientaParticular() {
        return this.idHerramientaParticular;
    }
    
    public void setIdHerramientaParticular(short idHerramientaParticular) {
        this.idHerramientaParticular = idHerramientaParticular;
    }

    public TipoHerramienta getTTherramienta() {
        return this.TTherramienta;
    }
    
    public void setTTherramienta(TipoHerramienta TTherramienta) throws TipoDatoException{
        if(TTherramienta==null)
            throw new TipoDatoException("Debe seleccionar un tipo de herramienta");
        this.TTherramienta = TTherramienta;
    }
    
   
    public String getCaracteristicas() {
        return this.caracteristicas;
    }
    
    public void setCaracteristicas(String caracteristicas) {
        this.caracteristicas = caracteristicas;
    }
    
    
    public String getModelo() {
        return this.modelo;
    }
    
    public void setModelo(String modelo) throws TipoDatoException {
        if(modelo.trim().compareTo("")==0)
            throw new TipoDatoException("Debe ingresar un modelo");
        this.modelo = modelo;
    }
    
   
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) throws TipoDatoException {
        if(nombre.trim().compareTo("")==0)
            throw new TipoDatoException("Debe ingresar un nombre");
        this.nombre = nombre;
    }
    
    
    public String getObservaciones() {
        return this.observaciones;
    }
    
    public void setObservaciones(String observaciones) {
        this.observaciones = observaciones;
    }
    
    public Date getFecBaja() {
        return this.fecBaja;
    }
    
    public void setFecBaja(Date fecBaja) {
        this.fecBaja = fecBaja;
    }
    
    
    public String getMotivoBaja() {
        return this.motivoBaja;
    }
    
    public void setMotivoBaja(String motivoBaja) {
        this.motivoBaja = motivoBaja;
    }
    /**
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="THerramientasParticular")
    public Set getTMaqHerrPartXDetPlans() {
        return this.TMaqHerrPartXDetPlans;
    }
    
    public void setTMaqHerrPartXDetPlans(Set TMaqHerrPartXDetPlans) {
        this.TMaqHerrPartXDetPlans = TMaqHerrPartXDetPlans;
    }
      */

    public boolean validarOk() throws TipoDatoException{
        String mje="Algunos campos no han sido ingresado correctamente.";
        if(this.TTherramienta==null)
            throw new TipoDatoException(mje);
        if(this.modelo==null)
            throw new TipoDatoException(mje);
        if(this.nombre==null)
            throw new TipoDatoException(mje);
        if(this.cantidad==null || this.cantidad==0)
             throw new TipoDatoException(mje);
        return true;
    }


    public Integer getCantidad() {
        return this.cantidad;
    }

    public void setCantidad(Integer cantidad)throws TipoDatoException {
        if(cantidad==null || cantidad==0)
            throw new TipoDatoException("Debe ingresar la cantidad existente de la herramienta");
        this.cantidad = cantidad;
    }


    public List<ProblemasMhp> getTProblemasMhps() {
        return new ArrayList<ProblemasMhp>(this.TProblemasMhps);
    }

    public void setTProblemasMhps(Set TProblemasMhps) {
        this.TProblemasMhps = TProblemasMhps;
    }

    public String toString()
    {
        return this.getNombre();
    }
}


