package Negocio.Deposito;
// Generated 12/08/2011 13:27:23 by Hibernate Tools 3.2.1.GA


import Negocio.Produccion.DetallePlanProduccion;
import Negocio.Compras.DetalleOrdenCompra;
import Negocio.Compras.Material;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TFaltantes generated by hbm2java
 */
@Entity
@Table(name="T_FALTANTES"
    ,schema="dbo"
    ,catalog="Ramaty"
)
public class Faltante  implements java.io.Serializable {


     private short idFaltante;
     private DetallePlanProduccion TDetallesPlan;
     private DetalleOrdenCompra TDetallesOrdenCompra;
     private Material TMateriales;
     private BigDecimal cantidad;
     private Date fecGeneracion;
     private Date fecNecesidad;

    public Faltante() {
    }

	
    public Faltante(short idFaltante, Material TMateriales, BigDecimal cantidad, Date fecGeneracion, Date fecNecesidad) {
        this.idFaltante = idFaltante;
        this.TMateriales = TMateriales;
        this.cantidad = cantidad;
        this.fecGeneracion = fecGeneracion;
        this.fecNecesidad = fecNecesidad;
    }
    public Faltante(short idFaltante, DetallePlanProduccion TDetallesPlan, DetalleOrdenCompra TDetallesOrdenCompra, Material TMateriales, BigDecimal cantidad, Date fecGeneracion, Date fecNecesidad) {
       this.idFaltante = idFaltante;
       this.TDetallesPlan = TDetallesPlan;
       this.TDetallesOrdenCompra = TDetallesOrdenCompra;
       this.TMateriales = TMateriales;
       this.cantidad = cantidad;
       this.fecGeneracion = fecGeneracion;
       this.fecNecesidad = fecNecesidad;
    }
   
     @Id 
    @GeneratedValue
    @Column(name="ID_FALTANTE", unique=true, nullable=false, precision=4, scale=0)
    public short getIdFaltante() {
        return this.idFaltante;
    }
    
    public void setIdFaltante(short idFaltante) {
        this.idFaltante = idFaltante;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_DETALLE_PLAN")
    public DetallePlanProduccion getTDetallesPlan() {
        return this.TDetallesPlan;
    }
    
    public void setTDetallesPlan(DetallePlanProduccion TDetallesPlan) {
        this.TDetallesPlan = TDetallesPlan;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_DETALLE_ORDEN_COMPRA")
    public DetalleOrdenCompra getTDetallesOrdenCompra() {
        return this.TDetallesOrdenCompra;
    }
    
    public void setTDetallesOrdenCompra(DetalleOrdenCompra TDetallesOrdenCompra) {
        this.TDetallesOrdenCompra = TDetallesOrdenCompra;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_MATERIAL", nullable=false)
    public Material getTMateriales() {
        return this.TMateriales;
    }
    
    public void setTMateriales(Material TMateriales) {
        this.TMateriales = TMateriales;
    }
    
    @Column(name="CANTIDAD", nullable=false, precision=5)
    public BigDecimal getCantidad() {
        return this.cantidad;
    }
    
    public void setCantidad(BigDecimal cantidad) {
        this.cantidad = cantidad;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FEC_GENERACION", nullable=false, length=23)
    public Date getFecGeneracion() {
        return this.fecGeneracion;
    }
    
    public void setFecGeneracion(Date fecGeneracion) {
        this.fecGeneracion = fecGeneracion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FEC_NECESIDAD", nullable=false, length=23)
    public Date getFecNecesidad() {
        return this.fecNecesidad;
    }
    
    public void setFecNecesidad(Date fecNecesidad) {
        this.fecNecesidad = fecNecesidad;
    }




}


