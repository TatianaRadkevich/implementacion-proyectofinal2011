package Negocio.Administracion;
// Generated 12/08/2011 13:27:23 by Hibernate Tools 3.2.1.GA


import Negocio.Administracion.Cobro;
import Negocio.TipoDatoException;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TFormasPago generated by hbm2java
 */
@Entity
@Table(name="T_FORMAS_PAGO"
    ,schema="dbo"
    ,catalog="Ramaty"
)
public class FormaPago  implements java.io.Serializable {

    static void nuevo() {
        throw new UnsupportedOperationException("Not yet implemented");
    }


     @Id
     @GeneratedValue
    @Column(name="ID_FORMA_PAGO", unique=true, nullable=false, precision=2, scale=0)
     private short idFormaPago;
     @Column(name="NOMBRE", nullable=false, length=50)
     private String nombre;
     @Column(name="DESCRIPCION", length=200)
     private String descripcion;
      @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FEC_BAJA",nullable=true, length=23)
     private Date fecha;
     @Column(name="MOTIVO_BAJA", nullable=true, length=200)
     private String motivo;
     @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="TFormasPago")
     private Set<Cobro> TCobroses = new HashSet<Cobro>(0);


    public FormaPago() {
    }

	
    public FormaPago(short idFormaPago, String nombre) {
        this.idFormaPago = idFormaPago;
        this.nombre = nombre;
    }
    public FormaPago(short idFormaPago, String nombre, String descripcion,Date fecha, String motivo, Set<Cobro> TCobroses) {
       this.idFormaPago = idFormaPago;
       this.nombre = nombre;
       this.descripcion = descripcion;
       this.fecha=fecha;
       this.motivo=motivo;
       this.TCobroses = TCobroses;
    }
   
    public short getIdFormaPago() {
        return this.idFormaPago;
    }
    
    public void setIdFormaPago(short idFormaPago) {
        this.idFormaPago = idFormaPago;
    }
    
    
    public String getNombre() {
        return this.nombre;
    }
    
     public void setNombre(String nombre) throws TipoDatoException{
        if(nombre.matches("[a-zA-Z ]*") && !nombre.trim().isEmpty())
            this.nombre = nombre;
        else
            throw new TipoDatoException("Formato incorrecto. Debe ser alfabético");

    }
    
    
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) throws TipoDatoException {
          if(descripcion.matches("[a-zA-Z ]*") && !descripcion.trim().isEmpty())
            this.descripcion = descripcion;
        else
            throw new TipoDatoException("Formato incorrecto. Debe ser alfabético");
    }

    public Set<Cobro> getTCobroses() {
        return this.TCobroses;
    }
    
    public void setTCobroses(Set<Cobro> TCobroses) {
        this.TCobroses = TCobroses;
    }

    @Override
    public String toString() {
        return this.nombre;
    }

    public void setFecha(Date fecha) {
        this.fecha=fecha;
    }
    public Date getFecha()
    {return this.fecha;}

    public void setMotivo(String motivo) throws TipoDatoException {

          if(motivo.matches("[a-zA-Z ]*") && !motivo.trim().isEmpty())
            this.motivo=motivo;
        else
            throw new TipoDatoException("Formato incorrecto. Debe ser alfabético");


    }
    public String getMotivo()
    {return this.motivo;}

  public boolean isOk() throws TipoDatoException{
        if(nombre==null)
            throw new TipoDatoException("Error");
            return true;
    }





}


