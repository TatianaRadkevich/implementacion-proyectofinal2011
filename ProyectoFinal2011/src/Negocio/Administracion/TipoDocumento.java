package Negocio.Administracion;
// Generated 12/08/2011 13:27:23 by Hibernate Tools 3.2.1.GA

import BaseDeDatos.Administracion.TipoDocumentoBD;
import Negocio.Administracion.Empleado;
import Negocio.Exceptiones.TipoDatoException;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TTdocumento generated by hbm2java
 */
@Entity
@Table(name = "T_TDOCUMENTO", schema = "dbo", catalog = "Ramaty")
public class TipoDocumento implements java.io.Serializable {

    @Id
    @GeneratedValue
    @Column(name = "ID_TDOCUMENTO", unique = true, nullable = false, precision = 2, scale = 0)
    private short idTdocumento;
    @Column(name = "NOMBRE", nullable = false, length = 50)
    private String nombre;
    @Column(name = "DESCRIPCION", length = 200)
    private String descripcion;
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "TTdocumento")
    private Set<Empleado> TEmpleadoses = new HashSet<Empleado>(0);

    public TipoDocumento() {
    }

    public TipoDocumento(short idTdocumento, String nombre) {
        this.idTdocumento = idTdocumento;
        this.nombre = nombre;
    }

    public TipoDocumento(short idTdocumento, String nombre, String descripcion, Set<Empleado> TEmpleadoses) {
        this.idTdocumento = idTdocumento;
        this.nombre = nombre;
        this.descripcion = descripcion;
        this.TEmpleadoses = TEmpleadoses;
    }

    public short getIdTdocumento() {
        return this.idTdocumento;
    }

    public void setIdTdocumento(short idTdocumento) {
        this.idTdocumento = idTdocumento;
    }

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) throws TipoDatoException {
        this.nombre=null;

        if (nombre.trim().isEmpty() || nombre.matches("[a-zA-Z ]*") == false) {
            throw new TipoDatoException("Formato incorrecto. Debe ser alfab√©tico");
        }
        
        TipoDocumento td=TipoDocumentoBD.getTipoDocumentoPorNombre(nombre);
        if (td!=null && td.getIdTdocumento()!=this.idTdocumento) {
            throw new TipoDatoException("Ya existe un tipo de documento con ese nombre");
        }

        this.nombre = nombre;
    }

    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public Set<Empleado> getTEmpleadoses() {
        return this.TEmpleadoses;
    }

    public void setTEmpleadoses(Set<Empleado> TEmpleadoses) {
        this.TEmpleadoses = TEmpleadoses;
    }

    @Override
    public String toString() {
        return this.getNombre();
    }

    public boolean validarOk() throws TipoDatoException {
        if (nombre == null) {
            throw new TipoDatoException("Algunos campos no han sido ingresado correctamente");
        }
        return true;
    }

    @Override
    public boolean equals(Object obj) {
        try {
            return ((TipoDocumento) obj).nombre.equals(this.nombre);
        } catch (Exception e) {
            return false;
        }
    }
}
